Start ups require diff management and strategy -- too much uncertainty compared to traditional, long time businesses
Ex. evaluating productivity. Getting teams to work cross functionally feels like less productivity because people measure productivity by long periods of doing what they are good at. Toyota manufacturing example
Start ups often build things nobody wants--doesn’t matter if on time or on budget
Are you planning to launch a rocket (long term planning of every single thing--anything that is off could kill the rocket) or drive a car (you may take a wrong turn by accident--does that stop you from getting to your destination?)
Entrepreneurship is management
 
Vision: create a thriving and world changing business
Product: change endlessly (aka tuning the engine)
Strategy: sometimes will change (called a pivot). Vision doesn’t change
 
Diff between start up (extreme uncertainty) and a trad business that is replicating an existing biz (only depends on execution)
 
Continuous fast testing to create disruptive innovation
Having only one test that you rely on is like being a politician or salesman
 
Validated learning: demonstrating empirically that a team has discovered valuable truths about a start up’s biz prospects
Better than market forecasting and classic biz planning
Not a good story to hide failure
 
Customers often can’t tell you what they want--they’ve never experienced it
Value in manufacturing vs value in customers. Customers don’t care how things are made, as long as it works.
This situation is dif in a start up when the customer doesn’t know what they want
New def of waste: anything that doesn’t’ contribute to learning is a waste (ex. Time spent refining a product no one wants)
Deliver a min. Viable product early, learn the same things with less effort
Start up productivity: systematically figuring out the right things to build
 
Easier to get funding with 0 revenue and customers (so used to hearing the stories of overnight success) than small #s (wondering what the problem is), but you need that time to experiment
 
Ask: should this product be built? Can we build a sustainable biz around this set of products and services?
 
Leath of faith assumptions: re: engine of growth
Value hypothesis: test if product/service actually gives value
Growth hypothesis: test how new customers will discover a product or service
Once these are clear, enter build phase with MVP
 
Find early adopters: they feel the need most, and are most forgiving about quality/missing features, happy to give feedback
Focus on feedback for what is working today, not what might work tomorrow
 
4 Qs to ask
Do consumers recognize that they have the problem you are trying to solve?
If there was a solution, would they buy it?
Would they buy it from us?
Can we build a solution for this problem? (most go straight to this question)
 
Identify elements of the plan that are assumptions and not facts. Figure out how to test this at the micro level. (ex. We assume that 10% of people will bring a new customer.)
 
Planning only works when in the presence of a long and stable history.
 
Build-measure-learn feedback loop
Minimize the total time spent in this loop.
Most people are trained in parts of this loop. These activities by themselves are not that important. Sum greater than it’s parts.
Happens in build measure learn, but actually reversed: figure out what we need to learn, use innovation accounting to figure out what we need to measure to know we are getting validated learning, figure out which product we need to build to run that experiment and get the measurement
 
Ex. Facebook got investment $ with this data
Amount of time spent on the site, more than half coming back everyday (proven value hypothesis)
Rate of growth: ¾ of Harvard undergrads signed up in a month without a dollar of marketing (proven growth hypothesis)
 
Be careful of how assumptions are written: don’t do it in a way that makes it seem less risky (ex. Comparing to other companies/industries can do that, altho we can def learn things abt assumptions via the market/past)
 
Many entrepreneurs are said to have been at the right place at the right time. But remember, many other people were also at the right place and at the right time.
 
Value vs profit: possible to profit wildly initially, but be ultimately value destroying in the long run
Ex. growing thru continuous investment fundraising, lots of paid ads w/o value adding product
Get out of the building/see for yourself
Must get out there to gather info about customers, markets, suppliers, channels
 
Customer archetype is also a hypothesis until strategy has shown validated learning that we can serve this type of customer in a sustainable way
 
MVP allows a full turn of build measure learn with least effort and development time
MVP (begins learning process, test fundamental biz hypothesis) vs prototype/concept test (end learning, answer product design/technical questions)
 
Early adopters are suspicious of a too polished product--if it's ready for all to adopt, what advantage do you get for being early?
    Thus additional features/ polish beyond what early adopters need = waste. Remove anything that doesn’t contribute directly to the learning you seek
 
Thus MVP can feel embarrassing/contradictory to what you've been taught
MVP examples
Fake advertisement (but only proves that customers would try, not enough to prove long term growth)
Free trial sign up
A video explanation with beta waitlist
Concierge method: starting with 1 customer, serving them personally while learning (may be inefficient), getting more customers, and building product to scale when there is enough
Able to build what is working today vs what might work in the future
Diff between this and small biz is that this is not the final product but the learning activity, must scale to grow or else be trapped in a small albeit profitable biz
Test engagement: what would be required to get customers to engage with the product and tell their friends about it?
Can also build separate MVPs to get feedback, 1 assumption at a time
 
If we do not know who the customer is, we do not know what quality is
Many famous products were released as low quality MVPs, and sometimes customers still loved them. If they don’t, perfect time to find out what they care about.
What if they don’t care about design the same way we do?
 
Don’t worry about getting ideas stolen. You are small, and established companies are busy with their stuff. Fast copiers and followers will do what they do anyways. Only way to beat competition: learn faster than anyone else
 
First learning milestone: test riskiest assumption first
Once established, 2nd milestone: tuning the engine
Good design: validated by positive changes in customer behaviour
 
Cohort analysis: instead of accumulative totals (ex. Total customers, total revenue), look at performance of each group of customers independently
Avoid ‘vanity metrics’ and ‘success theatre’
User stories: instead of specs for a new feature in tech terms, write a story describing a feature from the customers POV
 
3 A’s of metrics
Actionable: demonstrate cause and effect
How do we know for sure that something was caused by something else?
Accessible: use simple, easy to understand reports
Cohort based reports = people based reports
Ex. among the people who used our product in this period, here’s how many exhibited each of the behaviours we care about
Give access to all employees
Auditable: needs a way to verify data by talking to real customers
When a pet project is at stake, people will doubt the data
Also a good way to check data, and figure out why people act the way they do
 
*Split test experiments: diff versions of a product offered at same time (to get validated learning)
 
Kanban: capacity constraints
User stories have 4 stages of development
Backlog
In progress
Built
Validated
Max 3 in each step. When a story is validated, it leaves the board. If it’s proven false, remove.
Buckets will get full and you won’t be able to start new work. Must adapt to work long term such that you an efficiently put them through the stages.
Creates healthy culture.
 
Pivot or persevere?
Land of the living dead: company has some success, but not the growth they imagined. Persevering here is a waste of human energy
A start up’s runway: traditionally, amount of time a start up must achieve lift off or fail (cash/monthly burn rate)
    How to extend runway here: get more investment money, spend less each month
Better: how many pivots left.
    Extend runway: get to each pivot faster.
It can be scary to pivot, esp if things are going OK or you’re scared your vision hasn’t been fully realised yet
Signs a pivot is needed: decreasing effectiveness of product experiments, general feeling product development should be more productive
Plan in advance regular pivot or persevere meetings
 
Types of pivots
Customer segment pivot: some functionality, changing audience focus
Zoom-in pivot: refocus product on what prev was considered just one feature of a larger whole
Zoom-out pivot: single feature not enough, product becomes feature for larger product
Changing architecture: high margin, low volume to low margin, high volume or vice versa
Engine of growth pivot: between the 3 primary modes (viral, sticky, paid)
Usually alters how value is captured
Platform pivot: hanging the growth model
Channel pivot: re: distribution
 
Pivot is a strategy hypothesis
 
Power of small batches and single piece flow
If a problem occurs, you’ll find it in the first one you do
No sorting, stacking, etc between stages of large batches
Large batch must deliver all at once at the end - higher stakes
Toyota used small batches successfully by fixing problems and quality issues faster, and reimagining and restructuring the work
Large batch death spiral: large batches tend to grow over time, typically require rework, delays and interruptions, everyone has inceptive to do work in ever large batches
    If a product has already been in development for x time, why not fix on more thing/add another feature? Who wants to risk the success of this huge release?
Teams sacrifice learning to work more ‘efficiently’
 
Goal: small batches all the way down the supply chain with single piece flow.
Ex. Toyota just in time production. Dealer uses a bumper to fix a car. Restocking facility sends bumper to dealer. Warehouse sends bumper to restock facility. Factory produces 1 more bumper for warehouse.
Warehouses can shrink, just in case inventory shrinks
 
Sustainable growth: does not include one time activities that generate surges w/o longterm impact
New customers come from actions of old customers
Word of mouth
2. As a side effect of product usage
Thru funded advertising (must come from revenue, not paid for by investment capital)
Thru repeat purchase/use
 
Possible to have fast growth and early adoption, then stall while exhausting out the early adopters while going mainstream
Mainstream customers have diff requirements and demands
 
3 engines of growth
Sticky: products designed to attract and retain customers for long term. Ex. telephone
Churn rate: % of customers in any period who fail to remain engaged
Need customer acquisition rate > churn
Ex. company not growing. Turns out, churn rate was being cancelled out by customer acquisition rate. Hence, need to focus on customer retention (not sales/marketing, the standard intuition)
Viral: awareness passes person to person (like a virus) as a result of product use, not word of mouth
Aka viral loop, with speed as the viral coefficient (how many friends will each customer bring?)
Needs coefficient >1 for exponential growth
Viral coefficient most important part, must improve
Revenue typically from side activities (ex. Ad revenue) because charging customers impedes growth
Paid: money made from each customer - cost to get customer
Growth: increase revenue from each customer or drive down cost of getting customer
Companies with outbound sales, retail stores relying on foot traffic
Most sources of customer acquisition are subject to competition
Cost per acquisition (CPA) over time gets bid up by competition. Everyone will end up paying most of their marginal profit to the source of acquisition. Ability to grow depends on differentiated ability to monetize a certain customer set.
 
Technically, can use more than 1 engine of growth, but is complicated and confusing. Best to do one you think will work best first, and pursue thoroughly before pivoting.
 
product/market fit: moment when a biz finds widespread set of customers that resonate with it's product
Pivots are not fails if you don’t achieve this fit. Even with the fit, it doesn’t mean you no longer need to pivot.
Depends on which engine to determine growth metrics to see progress
 
Every engine is tied to a set of customers that will eventually be exhausted.
When? Can happen slowly, even if the company is still growing. Can lead to crisis
 
Building an adaptive organization
Speed is needed, as are built in speed regulators
slow down to keep going fast (correct mistakes that may compound)
 
Use 5 why’s to get to the root problem
Using this will often uncover a human mistake/need for training
Make proportional investment depending on how bad it was, to each level of why
This way training gets done slowly to what matters, not doing a big batch style of training, reduce overinvesting or over engineering
 
If an employee ‘breaks’ a process, encourage them to find a way to fix it so that it doesn’t happen to others
Encourages creativity without fear
 
Introducing 5 whys and avoiding 5 blames
Have everyone affected by the problem present at the meeting
Requires mutual trust and empowerment
Simple rules to follow/a simpler 5 why’s
Be tolerant of mistakes for the first time.
Never allow the same mistake to be made twice.
5 whys can meet resistance (ex. May suggest you need to invest in smth when you are already busy and want to focus on development)
Start with low pressure areas first, to get acquainted before dealing with high stakes problems
Appoint a 5 whys master in each area as moderators, who make decisions, assign follow up work, and to see how these meetings are going
Don’t send baggage through 5 whys. Hold one for all new problems. If baggage was important, it will come up then.
Start these meetings with explaining the process and benefits
5 whys helps teams work better together.
 
Achieving failure: successfully executing a flawed plan.
 
How to nurture disruptive innovation, esp in an existing company
Scarce but secure resources
Independent development autonomy (handoffs and approvals slow down)
Personal stake in outcome (can be financial, or in credit--make sure there is objective criteria for handing these out.
Not a good idea to hide innovation from mother company
Section on creating an innovation sandbox
 
As companies get bigger and products get commercialized, get diff managers to deal with that optimization and automation so that those used to creativity can get back to r&D
 
 
There is surely nothing quite so useless as doing with great efficiency what should not be done at all.
Beware of traps:
Systems are important, but so are the kinds of people who run those systems
Being in a unlimited experimentation zone that is devoid of customer feedback or accountability of any kind
- Pseudoscience: using graphs to demonstrate cause and effect without actually knowing that those are true
- Beware of a new pseudoscience around MVPs, pivots, etc, like what happened to scientific management 
- idea of the long term stock exchange to prevent lack of innovation in already prospering companies because of pressures for short term growth
 
RESOURCES
leanstartup.meetup.com
Leansteartup.pbworks.com 
Leanstartupcircle.com
 
The Four Steps to the Epiphany - Steve Blank (original boo of customer development) free copy at ericri.es/foursteps
The ENtrepreneur’s Guide to Customer Development - Brant Cooper, Patrick Vlaskovits
The Innovators Dilemma, The Innovator’s Solution - Clayton M Christensen
Geoffrey A. Moore - Crossing the CHasm and Inside the Tornado are early classiCs, also Dealing with Darwin…
Bunch more books… esp about Toyota, GM, cars
 
BLOGS
500hats.typepad.com
Blog.500startups.com
500hats.typepad.com/500blogsmetri-2.htm (framework for thinking and measuring online services)
 
Startup-marketing.com integrating marketing into start ups
Andrewchenblog.com best source for thoughts on viral marketing, startup metrics, design
 
 
